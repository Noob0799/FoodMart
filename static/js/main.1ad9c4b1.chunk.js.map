{"version":3,"sources":["Components/Body/Cards/Card.js","Components/Layout/Navbar.js","Components/Body/Item/ItemDisplay.js","Components/Body/Modal/ModalComponent.js","Components/Body/Main/Main.js","Components/Body/Item/Item.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","media","height","width","style","cursor","odd","backgroundColor","color","fontSize","even","CardComponent","props","classes","handleModal","obj","modal","element","CardContent","className","object","label","name","price","type","onClick","console","log","index","Card","CardMedia","image","title","click","navbar","ItemDisplay","backelem","showBack","back","src","alt","category","description","Table","handleClose","document","getElementById","display","handleShow","state","show","this","id","hidden","React","Component","Main","displaydata","n","foodData","length","count","rowElem","createElement","setAttribute","i","colElem","appendChild","ReactDOM","render","handleClick","history","push","pathname","data","handleChange","e","tempfood","keyCode","target","value","inputval","setState","suggestions","suggested","innerHTML","key","suggestedvalues","toString","indexOf","toLowerCase","search","templist","forEach","includes","displayfiltereddata","Axios","get","then","res","catch","err","valtosearch","placeholder","onChange","onKeyUp","handleKeyUp","map","elem","Math","random","withRouter","Item","goBack","foodItem","match","params","tempid","PureComponent","App","exact","path","component","Boolean","window","location","hostname","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1ad9c4b1.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport './Cards.css';\n\nconst useStyles = makeStyles({\n  media: {\n    height: 290,\n    width: \"100%\"\n  },\n  style: {\n    cursor: \"pointer\",\n    height: 500\n  },\n  odd: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    fontSize: \"20px\"\n    \n  },\n  even: {\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: \"20px\"\n  }\n});\n\n\nconst CardComponent = (props) => {\n  const classes = useStyles();\n  \n  const handleClick = (obj) => {\n    props.click(obj);\n  }\n\n  const handleModal = (obj) => {\n    props.modal(obj);\n  }\n  \n\n  let element = (\n    <CardContent className={classes.even}>\n      <label>{props.object.label}</label><br/>\n        <label>{props.object.name}</label><br/>\n        <label><b>{props.object.price}</b></label><br/>\n      <button type=\"button\" className=\"btn btn-dark btn-sm\" onClick={() => handleModal(props.object)}>Show</button>\n    </CardContent>\n  );\n\n  console.log(props.index);\n  if(props.index%2 !== 0) {\n    element = (\n      <CardContent className={classes.odd}>\n        <label>{props.object.label}</label><br/>\n        <label>{props.object.name}</label><br/>\n        <label><b>{props.object.price}</b></label><br/>\n        <button type=\"button\" className=\"btn btn-light btn-sm\" onClick={() => handleModal(props.object)}>Show</button>\n      </CardContent>\n    );\n  }\n\n  return (\n    <Card className={classes.style}>\n      <CardMedia\n          className={classes.media}\n          image={props.object.image}\n          title=\"Food Items\"\n          onClick={() => handleClick(props.object)}\n        />\n        {element}\n    </Card>\n  );\n}\n\nexport default CardComponent;","import React from 'react';\nimport './Navbar.css';\n\nconst navbar = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <div className=\"mx-auto\">\n                <h2 className=\"header\">Welcome to Food Mart</h2>\n            </div>\n        </nav>\n    );\n} \n\nexport default navbar;","import React from 'react';\nimport './Item.css';\n\nconst ItemDisplay = (props) => {\n\n    const handleClick = () => {\n        props.back();\n    }\n\n    let backelem = null;\n    if(props.showBack === 'true') {\n        backelem = (\n            <button type=\"button\" className=\"btn btn-dark\" onClick={handleClick}>Back</button>\n        );\n    }\n\n    return (\n        <div className=\"container info\">\n            <div className=\"row infodisp my-1\">\n                <div className=\"col-md-6 children\">\n                    <span className=\"back\">\n                        {backelem}\n                    </span>\n                    <div className=\"image\">\n                        <img src={props.obj.image} alt={props.obj.name} />\n                    </div>\n                    <div className=\"price\">\n                        <p>{props.obj.label}</p>\n                        <p><b>{props.obj.price}$</b></p>\n                    </div>\n                </div>\n                <div className=\"col-md-6 children\">\n                    <div className=\"name my-2\">\n                        <p><b>Category:</b> {props.obj.category}</p>\n                        <p><b>Name:</b> {props.obj.name}</p>\n                    </div>\n                    <div className=\"description my-2\">\n                        <p>{props.obj.description}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ItemDisplay;","import React, { Fragment } from 'react';\nimport ItemDisplay from '../Item/ItemDisplay';\nimport './ModalComponent.css';\nexport default class Table extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            show: false\n        };\n    }\n\n    handleClose = () => {\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display = \"none\";\n    }\n    handleShow = () => {\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display = \"block\";\n    }\n\n    render(){\n        console.log(this.props.object);\n        return(\n            <Fragment>\n                    <button id=\"mymodalbtn\" onClick={this.handleShow} hidden>Open Modal</button>\n                    \n\n                    <div id=\"myModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <div className=\"closecontainer\">\n                                <div className=\"heading\"><h3>Food Recipe</h3></div>\n                                <div id=\"close\" className=\"close\" onClick={this.handleClose}>&times;</div>\n                            </div>\n                            <div className=\"recipe\">\n                                <ItemDisplay obj={this.props.object} showBack='false'/>\n                            </div>\n                        </div>\n                    </div>\n            </Fragment>\n            \n        );\n    }\n}","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter } from \"react-router-dom\";\nimport Axios from 'axios';\nimport Card from '../Cards/Card';\nimport Navbar from '../../Layout/Navbar';\nimport Modal from '../Modal/ModalComponent'\nimport './searchbox.css';\nimport './Main.css';\n\nclass Main extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            foodData: [],\n            suggestions: [],\n            suggested: 'All'\n        };\n        \n    }\n\n    componentDidMount() {\n        console.log(\"Component mounted!!\");\n        Axios.get(\"http://starlord.hackerearth.com/recipe\")\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                    foodData: res.data\n                });\n                this.displaydata();\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    displaydata = () => {\n        const n = this.state.foodData.length;\n        let count = 0;\n        const rowElem = document.createElement('div');\n        rowElem.setAttribute('class', 'row my-1');\n        for(let i=0;i<n ;i++){\n            const colElem = document.createElement('div');\n            colElem.setAttribute('class', 'col-3 my-1');\n            colElem.setAttribute('id', 'prod'+count);\n            count++;\n            rowElem.appendChild(colElem);\n            document.getElementById('container').appendChild(rowElem);\n            if(count === n) break;\n        }\n        for(let i=0;i<n;i++) {\n            ReactDOM.render(<Card object={this.state.foodData[i]} click={this.handleClick} index={i} modal={this.handleModal}/>, document.getElementById('prod'+i));\n        }\n    }\n\n    displayfiltereddata(data) {\n        document.getElementById('container').innerHTML = '';\n        const n = data.length;\n        let count = 0;\n        const rowElem = document.createElement('div');\n        rowElem.setAttribute('class', 'row my-1');\n        for(let i=0;i<n ;i++){\n            const colElem = document.createElement('div');\n            colElem.setAttribute('class', 'col-3 my-1');\n            colElem.setAttribute('id', 'filtprod'+count);\n            count++;\n            rowElem.appendChild(colElem);\n            document.getElementById('container').appendChild(rowElem);\n            if(count === n) break;\n        }\n        for(let i=0;i<n;i++) {\n            ReactDOM.render(<Card object={data[i]} click={this.handleClick} index={i} modal={this.handleModal}/>, document.getElementById('filtprod'+i));\n        }\n    }\n\n    handleModal = (obj) => {\n        console.log(obj.name);\n        ReactDOM.render(<Modal object={obj}/>,document.getElementById('modaldisp'));\n        document.getElementById('mymodalbtn').click();\n    }\n    \n    handleClick = (obj) => {\n        console.log(obj);\n        this.props.history.push({\n            pathname: '/food/' + obj.id,\n            data: obj\n        });\n    }\n\n    handleChange = (e) => {\n        const tempfood = [...this.state.foodData];\n        console.log(e.keyCode,e.target.value);\n        const inputval = e.target.value;\n        if(e.target.value.length === 0) {\n            this.setState({\n                suggestions: [],\n                suggested: 'All'\n            });\n            document.getElementById('container').innerHTML = '';\n            this.displaydata();\n            return;\n        }\n        let suggestedvalues = [];\n        let key,value;\n        for(let i=0;i<tempfood.length;i++) {\n            for(key in tempfood[i]) {\n                if(key === 'image' || key === 'id') continue;\n                if(suggestedvalues.length <=5) {\n                    value = tempfood[i][key];\n                    console.log(value, value.toString().indexOf(inputval));\n                    if(value.toString().toLowerCase().indexOf(inputval) > -1) {\n                        suggestedvalues.push(value);\n                    }\n                }\n            } \n        }\n        this.setState({\n            suggestions: [...suggestedvalues]\n        });\n        console.log(suggestedvalues);\n    }\n\n    search = (name) => {\n        console.log(name);\n        const templist = [];\n        this.state.foodData.forEach(obj => {\n            // console.log(obj.name,obj.category);\n            if(obj.name.includes(name)) {\n                templist.push(obj);\n            } else if(obj.category.includes(name)){\n                templist.push(obj);\n            }\n        });\n        console.log(templist);\n        this.setState({\n            suggestions: [],\n            suggested: name\n        });\n        this.displayfiltereddata(templist);\n    }\n\n    handleKeyUp(e) {\n        if (e.keyCode === 13) {\n            const valtosearch = this.state.suggestions[0];\n            this.search(valtosearch);\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar/>\n                <div className=\"search my-2\">\n                    <input type=\"text\" className=\"searchTerm\" placeholder=\"What are you looking for?\" onChange={this.handleChange} onKeyUp={this.handleKeyUp} />\n                </div>\n                <ul className=\"searchcontainer\">\n                {\n                    this.state.suggestions.map(elem => {\n                        return (\n                            <li key={{elem}+Math.random()} >\n                                <button type=\"button\" className=\"searchsuggest\"\n                                onClick={() => {\n                                    this.search(elem);\n                                }}>{elem}</button>\n                            </li>\n                        )\n                    })\n                }\n                </ul>\n                <div className=\"searchdisp px-1\" id=\"searchdisp\">\n                    <p><b>Category: </b>{this.state.suggested}</p>\n                </div>\n                <div className=\"parent\" id=\"parent\">\n                    <div className=\"child p-5 m-1\">\n                        <span id=\"container\"></span>\n                    </div>\n                </div>\n                <span id=\"modaldisp\"></span>\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Main);","import React, { Fragment } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Axios from 'axios';\nimport Navbar from '../../Layout/Navbar';\nimport ItemDisplay from './ItemDisplay';\n\nclass Item extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {\n            foodItem: {}\n        };\n        \n    }\n\n    componentDidMount() {\n        console.log(this.props.match.params.id);\n        const tempid = this.props.match.params.id;\n        if (tempid) {\n            let obj = {};\n            Axios.get(\"http://starlord.hackerearth.com/recipe\")\n                .then(res => {\n                    const data = res.data;\n                    console.log(data);\n                    for(let i=0;i<data.length;i++) {\n                        if(data[i].id.toString() === tempid) {\n                            obj = data[i];\n                            break;\n                        }\n                    }\n                    console.log(obj);\n                    this.setState({\n                        foodItem: obj\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n\n    goBack = () => {\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n                <Navbar/>\n                <ItemDisplay obj={this.state.foodItem} showBack='true' back={this.goBack}/>\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Item);","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Main from './Components/Body/Main/Main';\nimport Item from './Components/Body/Item/Item';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Fragment>\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/food/:id\" component={Item} />\n          </Fragment>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}